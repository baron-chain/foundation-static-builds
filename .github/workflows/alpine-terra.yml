name: alpine-base

on:
  pull_request:
    branches:
      - main
      - test
  push:
    branches:
      - main
      - test

jobs:
  build-base:

    strategy:
      matrix:
        platform: ["linux/amd64", "linux/arm64"]
        version:
          - 2.4.1
          - 2.4.0
          - 2.3.5
        
        include:
          # Include all
          - name: terra
            chain_name: localterra
            repo: terra-money/core
            user: terra
            binary: terrad
            build_command: make install
            build_tags: muslc
            mimalloc_version:
            cosmos_build_options: nostrip
            ldflags: -extldflags '-Wl,-z,muldefs -static'
            target: prod

          # Include per version
          - version: 2.4.1
            go_version: 1.20
            alpine_version: 3.16
          - version: 2.4.0
            go_version: 1.20
            alpine_version: 3.16
          - version: 2.3.5
            go_version: 1.20
            alpine_version: 3.16

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # https://docs.docker.com/build/ci/github-actions/multi-platform/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the github container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ghcr.io/${{ github.repository }}/${{ matrix.name }}
            ${{ secrets.DOCKERHUB_USER }}/${{ matrix.name }}
          tags: |
            type=sha
            type=raw,value=${{ matrix.version }}-alpine,enable={{is_default_branch}}

      - name: Build docker image
        uses: docker/build-push-action@v4
        with:
          target: ${{ matrix.target }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
          labels: ${{ env.DOCKER_METADATA_OUTPUT_LABELS }}
          build-args: |
            GO_VERSION="${{ matrix.go_version }}"
            ALPINE_VERSION="${{ matrix.alpine_version }}"
            BUILDPLATFORM="${{ matrix.platform }}"
            APP_NAME="${{ matrix.name }}"
            BIN_NAME="${{ matrix.binary }}"
            BUILD_COMMAND="${{ matrix.build_command }}"
            BUILD_TAGS="${{ matrix.build_tags }}"
            CHAIN_NAME="${{ matrix.name }}-1"
            COSMOS_BUILD_OPTIONS="${{ matrix.cosmos_build_options }}"
            GIT_TAG=v"${{ matrix.version }}"
            GIT_REPO="${{ matrix.repo }}"
            LDFLAGS="${{ matrix.ldflags }}"
            MIMALLOC_VERSION="${{ matrix.mimalloc_version }}"
            USER_NAME="${{ matrix.user }}"
