name: alpine-base

on:
  pull_request:
    branches:
      - main
      - test
  push:
    branches:
      - main
      - test

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        name: ["alpine-base"]
        platform: ["linux/amd64", "linux/arm64"]
        go_version: ["1.20"]
        alpine_version: ["3.16"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # https://docs.docker.com/build/ci/github-actions/multi-platform/
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the github container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ghcr.io/${{ github.repository }}/${{ matrix.name }}
            ${{ secrets.DOCKERHUB_USER }}/${{ matrix.name }}
          tags: |
            type=sha
            type=edge,branch=test
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build docker image
        uses: docker/build-push-action@v4
        with:
          target: ${{ matrix.name }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_METADATA_OUTPUT_TAGS }}
          labels: ${{ env.DOCKER_METADATA_OUTPUT_LABELS }}
          build-args: |
            GO_VERSION=${{ matrix.go_version }}
            ALPINE_VERSION=${{ matrix.alpine_version }}
            BUILDPLATFORM=${{ matrix.platform }}
