#!/usr/bin/env bash
set -Eeuo pipefail

# This script is used to initialize the chain

# The following environment variables are required:
APP_NAME=${APP_NAME:-"chain"}
BIN_NAME=${BIN_NAME:-"chaind"}
DENOM=${DENOM:-"u$(echo ${APP_NAME} | head -c 4)"}
MNEMONICS_JSON=${MNEMONICS_JSON:-"/etc/mnemonics.json"}
MASTER=$(jq -r '.mnemonics[0].name' ${MNEMONICS_JSON})
NUM_VALIDATORS=${NUM_VALIDATORS:-"$(jq -r '.mnemonics | length' ${MNEMONICS_JSON})"}

# Cosmos SDK v0.47 settings
if ${BIN_NAME} version --long | grep 'cosmos_sdk_version: v0.47'; then
    GENESIS="genesis"
    ADD_INIT_FLAGS="--default-denom=${DENOM}"
else
    GENESIS=""
    ADD_INIT_FLAGS=""
fi

# genesis.json in shared
if [ -f ${HOME}/.shared/genesis.json ]; then
    cp -a ${HOME}/.shared/genesis.json ${HOME}/.${APP_NAME}/config/genesis.json
fi

if [ ! -f ${HOME}/.${APP_NAME}/config/genesis.json ]; then
    echo "Initializing chain ${CHAIN_NAME}..."
    
    # initialize the chain
    ${BIN_NAME} init ${USER_NAME} --chain-id=${CHAIN_NAME} \
    ${ADD_INIT_FLAGS} > /dev/null 2>&1

    # initialize the accounts
    for name in $(jq -r ".mnemonics | .[] | .name | limit(${NUM_VALIDATORS};,[])" ${MNEMONICS_JSON}; do 
        echo "Initializing account ${name}..."
        jq -r ".mnemonics | .[] |select(.name ==\"${name}\") | .mnemonic" mnemonics.json |
        ${BIN_NAME} keys add ${name} --keyring-backend test --recover --output json >> ${HOME}/keys.json
        ${BIN_NAME} ${GENESIS} add-genesis-account ${name} 1000000000000${DENOM} --keyring-backend test
    done

    echo "Creating Gentx..."
    # create a gentx for the validator and add it to the genesis file
    ${BIN_NAME} ${GENESIS} gentx ${USER_NAME} 10000000000${DENOM} \
        --keyring-backend test \
        --chain-id=${CHAIN_NAME} \
        --output-document=${HOME}/.shared/gentxs/${USER_NAME}.gentx.json
fi

if [ ${USER_NAME} = ${MASTER} ]; then

    # wait for all gentxs to be created
    for name in $(jq -r '.mnemonics | .[] | .name | limit(${NUM_VALIDATORS};,[])' ${MNEMONICS_JSON}; do 
        until [ -f ${HOME}/.shared/gentxs/${name}.gentx.json ]; do
            echo "Waiting for ${name}.gentx.json to be created..."
            sleep 1
        done
    done

    echo "Generating Genesis..."
    ${BIN_NAME} ${GENESIS} collect-gentxs \
    --gentx-dir=${HOME}/.shared/gentxs \
    > /dev/null 2>&1

    # modify the genesis.json
    sed -e "s/stake/${DENOM}/g" \
        -i ${HOME}/.*/config/genesis.json
    
    cp -a ${HOME}/.${APP_NAME}/config/genesis.json ${HOME}/.shared/genesis.json
else
    until [ -f ${HOME}/.shared/genesis.json ]; do
        echo "Waiting for genesis.json to be created..."
        sleep 1
    done
    cp -a ${HOME}/.shared/genesis.json ${HOME}/.${APP_NAME}/config/genesis.json
fi
